#This is a test qx function

import numpy as np
from tqix import *

# test type and shape of a quantum object
print('***')
print('*** test type and shape of a quantum object')
a = random(2)
print('data =>', a)
print('type =>',typex(a))
print('sphape =>',shapex(a))

# test scalar
print('***')
print('*** test scalar')
dat = 1 + 1j #scalar
print('data =>',dat)
print('isqx =>',isqx(dat))
#print('isbrax-ketx-operx=>', isbrax(dat), isketx(dat), isoperx(dat))
dat = qx(dat)
print('new data =>', dat)
print('isqx =>',isqx(dat))
print('type =>', typex(dat))
print('shape =>', shapex(dat))
print('isbrax-ketx-operx=>', isbrax(dat), isketx(dat), isoperx(dat))
print('ishermx = >', ishermx(dat))
print('isnormx =>', isnormx(dat))
dat = normx(dat)
print('new data =>', dat)
print('after normx: isnormx =>', isnormx(dat))
dat = operx(dat)
print('operx type =>', typex(dat))
print('ishermx = >', ishermx(dat))

# test tuple
print('***')
print('*** test tuple')
dat = (1., 2+1j, 3)
print('data =>',dat)
print('isqx =>',isqx(dat))
#print('isbrax-ketx-operx=>', isbrax(dat), isketx(dat), isoperx(dat))
dat = qx(dat)
print('new data =>', dat)
print('isqx =>',isqx(dat))
print('type =>', typex(dat))
print('shape =>', shapex(dat))
print('isbrax-ketx-operx=>', isbrax(dat), isketx(dat), isoperx(dat))
#print('ishermx = >', ishermx(dat))
print('isnormx =>', isnormx(dat))
dat = normx(dat)
print('after normx: isnormx =>', isnormx(dat))
print('check inner product:', dotx(dat,daggx(dat)))
dat = operx(dat)
print('operx type =>', typex(dat))
print('after operx: isnormx =>', isnormx(dat))
print('l2normx = > ', l2normx(dat))
print('ishermx = >', ishermx(dat))

# test tuple 2
print('***')
print('*** test tuple 2')
dat = ((1., 2+1j, 3), (2+1j,4,5),(2,3j,4))
print('data =>',dat)
print('isqx =>',isqx(dat))
#print('isbrax-ketx-operx=>', isbrax(dat), isketx(dat), isoperx(dat))
dat = qx(dat)
print('new data =>', dat)
print('isqx =>',isqx(dat))
print('type =>', typex(dat))
print('shape =>', shapex(dat))
print('isbrax-ketx-operx=>', isbrax(dat), isketx(dat), isoperx(dat))
print('ishermx = >', ishermx(dat))
print('isnormx =>', isnormx(dat))
dat = normx(dat)
print('after normx: isnormx =>', isnormx(dat))
dat = operx(dat)
print('operx type =>', typex(dat))
print('l2normx = > ', l2normx(dat))
print('ishermx = >', ishermx(dat))

# test list
print('***')
print('*** test list')
dat = [1, 2.0, 3 + 1j]
print('data =>',dat)
print('isqx =>',isqx(dat))
#print('isbrax-ketx-operx=>', isbrax(dat), isketx(dat), isoperx(dat))
dat = qx(dat)
print('new data =>', dat)
print('isqx =>',isqx(dat))
print('type =>', typex(dat))
print('shape =>', shapex(dat))
print('isbrax-ketx-operx=>', isbrax(dat), isketx(dat), isoperx(dat))
print('isnormx =>', isnormx(dat))
dat = normx(dat)
print('after normx: isnormx =>', isnormx(dat))
dat = operx(dat)
print('operx type =>', typex(dat))

# test list 2
print('***')
print('*** test list 2')
dat = [[1], [2.0], [3 + 1j]]
print('data =>',dat)
print('isqx =>',isqx(dat))
#print('isbrax-ketx-operx=>', isbrax(dat), isketx(dat), isoperx(dat))
dat = qx(dat)
print('new data =>', dat)
print('isqx =>',isqx(dat))
print('type =>', typex(dat))
print('shape =>', shapex(dat))
print('isbrax-ketx-operx=>', isbrax(dat), isketx(dat), isoperx(dat))
print('isnormx =>', isnormx(dat))
dat = normx(dat)
print('after normx: isnormx =>', isnormx(dat))
dat = operx(dat)
print('operx type =>', typex(dat))

# test list 3
print('***')
print('*** test list 3')
dat = [[1, 2.0, 3 + 1j],[4,5,6],[7,5,2]]
print('data =>',dat)
print('isqx =>',isqx(dat))
#print('isbrax-ketx-operx=>', isbrax(dat), isketx(dat), isoperx(dat))
dat = qx(dat)
print('new data =>', dat)
print('isqx =>',isqx(dat))
print('type =>', typex(dat))
print('shape =>', shapex(dat))
print('isbrax-ketx-operx=>', isbrax(dat), isketx(dat), isoperx(dat))
print('isnormx =>', isnormx(dat))
dat = normx(dat)
print('after normx: isnormx =>', isnormx(dat))
dat = operx(dat)
print('operx type =>', typex(dat))

# test array 1d
print('***')
print('*** test array 1')
dat = np.array([1+2j,3+1j])
print('data =>',dat)
print('isqx =>',isqx(dat))
#print('isbrax-ketx-operx=>', isbrax(dat), isketx(dat), isoperx(dat))
dat = qx(dat)
print('new data =>', dat)
print('isqx =>',isqx(dat))
print('type =>', typex(dat))
print('shape =>', shapex(dat))
print('isbrax-ketx-operx=>', isbrax(dat), isketx(dat), isoperx(dat))
print('isnormx =>', isnormx(dat))
dat = normx(dat)
print('after normx: isnormx =>', isnormx(dat))
dat = operx(dat)
print('operx type =>', typex(dat))

# test array 2
print('***')
print('*** test array 2')
dat = np.array([[1+2j,3+1j]])
print('data =>',dat)
print('isqx =>',isqx(dat))
#print('isbrax-ketx-operx=>', isbrax(dat), isketx(dat), isoperx(dat))
dat = qx(dat)
print('new data =>', dat)
print('isqx =>',isqx(dat))
print('type =>', typex(dat))
print('shape =>', shapex(dat))
print('isbrax-ketx-operx=>', isbrax(dat), isketx(dat), isoperx(dat))
print('isnormx =>', isnormx(dat))
dat = normx(dat)
print('after normx: isnormx =>', isnormx(dat))
dat = operx(dat)
print('operx type =>', typex(dat))

# test array 3
print('***')
print('*** test array 3')
dat = np.array([[1+2j],[3+1j]])
print('data =>',dat)
print('isqx =>',isqx(dat))
#print('isbrax-ketx-operx=>', isbrax(dat), isketx(dat), isoperx(dat))
dat = qx(dat)
print('new data =>', dat)
print('isqx =>',isqx(dat))
print('type =>', typex(dat))
print('shape =>', shapex(dat))
print('isbrax-ketx-operx=>', isbrax(dat), isketx(dat), isoperx(dat))
print('isnormx =>', isnormx(dat))
dat = normx(dat)
print('after normx: isnormx =>', isnormx(dat))
dat = operx(dat)
print('operx type =>', typex(dat))

# test array 4
print('***')
print('*** test array 4')
dat = np.array([[1+2j, 3 ],[3+1j, 5]])
print('data =>',dat)
print('isqx =>',isqx(dat))
#print('isbarx-ketx-operx=>', isbarx(dat), isketx(dat), isoperx(dat))
dat = qx(dat)
print('new data =>', dat)
print('isqx =>',isqx(dat))
print('type =>', typex(dat))
print('shape =>', shapex(dat))
print('isbrax-ketx-operx=>', isbrax(dat), isketx(dat), isoperx(dat))
print('ishermx = >', ishermx(dat))
print('isnormx =>', isnormx(dat))
dat = normx(dat)
print('after normx: isnormx =>', isnormx(dat))
dat = operx(dat)
print('operx type =>', typex(dat))
print('ishermx = >', ishermx(dat))


# test eigenx
print('****************')
print('test eigenx')
print('data => ', dat)
v,s = eigenx(dat)
print('eigenvalue =>',v)
print('eigenstate =>',s)
print('eigenstate0 =>', s[0])
print('check eigen-condiction =>',np.dot(dat,s[0])-v[0]*s[0])
print('check eigen-condiction =>',np.dot(dat,s[1])-v[1]*s[1])


# test groundx
print('****************')
print('test groundx')
print(groundx(dat))

# test expomential
print('****************')
print('test exponential')
m = np.zeros((4,4))
print(typex(m))
print('expoenetial =>', expx(m))
print('sqrt => ', sqrtx(dat))
print('diag => ', diagx(dat))

